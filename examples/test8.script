var a 5;

println a

var b {array 1 2 3}
var bb {clone b}

for i 0 {len bb} {
    #println bb.$i
    println bb.{i}
}


fn my_add {a b} {
    a
}
println {call my_add 15 9}

substr "012345" 2 4

var a {vec4 11.0 {vec2 22.0 33.0} 44.0};
set a.xyzw a.wzyx;
println a

#println "test2 {}" {do_test2}
#println "test2 {}" {do_test2}
#println "test2 {}" {do_test2}

#println "get_test1 {}" {get_test}
#set_test 554
#println "get_test2 {}" {get_test}

var g {array 0 1 (array 2 3 {dict ["x" 11] ["y" 22 ] ["z" {array 33 44 55}] } )}
println g
set g.2.2.z.1 99
println g
println "glen {}" g.len


var q0 5,q1 6, q2, q3 (+ q1 88) ;

println "q {q0} {q1} {q2} {q3}"
#println "{q0}"


var v (array (dict ["abc" (array )]))
v.0."abc".push 99
v.0.abc.push 100
println v

var d (dict ["c" (vec4 1.0 2.0 3.0 4.0)])
#var c (vec4 1.0 2.0 3.0 4.0)
set d.c.rgb (vec3 5.0 6.0 7.0);
println d


var dd (dict  [1 2] [3 4] \
    ["5" 6] [true 7] \
    [nil
        8]
    )


#var dd (dict {1 : 2, 3 : 4, "5" : 6, true : 7, nil : 8,} )
#var dd : dict [1 2] [3 4] ["5" 6] [true 7] [nil 8]
#var dd = dict [1 2] [3 4] ["5" 6] [true 7] [nil 8]
#dd.insert :k :v

println dd
println dd.{true}

fn qqq(q) { println "q is {q}" }
#fn rrr(r) {}
#call rrr [call qqq 123]
#var u [call qqq 123]

fn abc() {
    return 1
    2
}

call abc
